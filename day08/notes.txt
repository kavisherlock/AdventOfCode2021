This was a tricky one. First one I needed a pen-and-paper for. I knew I would eventually have to decode the signals and find the output digit values just by looking at it
Part 1 was, of course, child's play. Just had to calculate the number of strings in the output of lengths 2, 3, 4 or 7
Part 2 is where the fun began. To start, I initially started thinking about ways to fully decode the signals, that is find out which bad segment corresponds to which good one. But then I realised, that was not actually necessary. I just needed to know which segment combination belonged to which digit. Now, I already know what the combinations are for 1, 4, 7 and 8. Additionally, the five-length ones can only be 2, 3 or 5, and the six-length ones can only be 0, 6 or 9. I started with the six-length ones. 9 had to be the only one that fully contained 4. And 0 was the only one that contained the segments that are in 4 but NOT in 1. With 9 and 0 identified, the remaining one was 6. Similarly, among the five-length ones, 3 was the only one containing all the segments from 7. And 5 was the only the fully contained in 6. And finally the remaining was 2. With all the digits sorted, I just had to decode the outputs for each and add them all together
